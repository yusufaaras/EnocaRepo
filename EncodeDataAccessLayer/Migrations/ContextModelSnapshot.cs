// <auto-generated />
using System;
using EnocaDataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EnocaDataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EncodeEntityLayer.Concrete.Carrier", b =>
                {
                    b.Property<int>("CarrierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarrierId"));

                    b.Property<int>("CarrierConfigurationid")
                        .HasColumnType("integer");

                    b.Property<bool>("CarrierIsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("CarrierName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CarrierPlusDesiCost")
                        .HasColumnType("integer");

                    b.HasKey("CarrierId");

                    b.ToTable("Carrier");
                });

            modelBuilder.Entity("EncodeEntityLayer.Concrete.CarrierConfigurations", b =>
                {
                    b.Property<int>("CarrierConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarrierConfigurationId"));

                    b.Property<decimal>("CarrierCost")
                        .HasColumnType("numeric");

                    b.Property<int>("CarrierId")
                        .HasColumnType("integer");

                    b.Property<int>("CarrierMaxDesi")
                        .HasColumnType("integer");

                    b.Property<int>("CarrierMinDesi")
                        .HasColumnType("integer");

                    b.HasKey("CarrierConfigurationId");

                    b.HasIndex("CarrierId");

                    b.ToTable("CarrierConfigurations");
                });

            modelBuilder.Entity("EncodeEntityLayer.Concrete.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CarrierId")
                        .HasColumnType("integer");

                    b.Property<decimal>("OrderCarrierCost")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderDesi")
                        .HasColumnType("integer");

                    b.HasKey("OrderId");

                    b.HasIndex("CarrierId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EncodeEntityLayer.Concrete.CarrierConfigurations", b =>
                {
                    b.HasOne("EncodeEntityLayer.Concrete.Carrier", "Carrier")
                        .WithMany("CarrierConfiguration")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");
                });

            modelBuilder.Entity("EncodeEntityLayer.Concrete.Orders", b =>
                {
                    b.HasOne("EncodeEntityLayer.Concrete.Carrier", "Carrier")
                        .WithMany("Order")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");
                });

            modelBuilder.Entity("EncodeEntityLayer.Concrete.Carrier", b =>
                {
                    b.Navigation("CarrierConfiguration");

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
